{"version":3,"sources":["store/redusers/user.js","store/redusers/game.js","store/redusers/multiplayerGame.js","store/redusers/index.js","pages/Main.js","store/actions/auth.js","pages/components/AuthForm.js","pages/Auth.js","pages/components/NavBar/NavBar.js","store/actions/signup.js","store/configureStore.js","pages/components/RegForm/RegForm.js","pages/Register.js","pages/components/GameArea/GameArea.js","store/actions/game.js","pages/Game.js","pages/components/CoopGameArea/CoopGameArea.js","store/actions/multiplayerGame.js","pages/MultiplayerGame.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isAuth","isFailed","checkingUser","signUpSuccess","userData","error","gameState","isLoaded","isLoading","data","waitingForOpponent","dataIsLoading","gameDataLoaded","gotInvite","inviteAccepted","gameReady","gameScore","gamers","opponent","winner","combineReducers","gameData","state","arguments","length","undefined","action","type","Object","objectSpread","payload","userStatus","score","multiplayerGameStatus","playerReady","MainPage","react_default","a","createElement","className","Component","gql","GraphQLClient","headers","authFailed","getUserScore","_callee3","id","res","regenerator_default","wrap","_context3","prev","next","request","sent","abrupt","getUserData","t0","console","log","stop","AuthForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","_ref","asyncToGenerator","mark","_callee","err","values","_context","userAuth","username","password","message","history","push","_x","_x2","apply","this","getFieldDecorator","es_form","onSubmit","Item","rules","required","input","prefix","icon","style","color","placeholder","es_button","htmlType","disabled","block","react_router_dom","to","connect","dispatch","user","_res$userAuth","token","localStorage","setItem","jwtDecode","withRouter","AuthPage","react_router","MainAuthForm","create","SubMenu","NavBar","checkToken","_this$props","menu","mode","theme","selectable","key","title","onClick","logOut","removeItem","_ref2","_callee2","_context2","userId","RegForm","confirmDirty","validateFieldsAndScroll","userSignup","success","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","assign","labelCol","xs","span","sm","wrapperCol","label","hasFeedback","validator","Password","onBlur","tooltip","whitespace","offset","nickname","email","createUser","RegPage","MainRegForm","socket","GameArea","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","answered","componentWillMount","getMovieData","checkTheAnswer","answer","movies","find","item","btnAnswer","name","background","borderColor","updateScore","correctButton","document","getElementsByClassName","mdb_id","toString","nextQuestion","io","disconnect","_this2","fontSize","concat","imageURL","map","display","emit","GamePage","components_GameArea_GameArea","CoopGameArea","acceptTheInvite","readyForGame","playerScore","nextMovie","GamerWinner","Fragment","OpponentWinner","on","getPlayersList","movieData","gotaWinner","globalScoreUpdate","exitGame","gameNumber","cursor","nick","ready","visibility","size","invitePlayer","getDataSuccess","startAgain","MultiGamePage","components_CoopGameArea_CoopGameArea","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","App","es","components_NavBar_NavBar","from","exact","path","component","MultiplayerGame","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ba4e1ff.chunk.js","sourcesContent":["const initialState = {\n    isAuth: false,\n    isFailed: false,\n    checkingUser: false,\n    signUpSuccess: false,\n    userData: {},\n    error: null\n}\n\nexport function userStatus(state = initialState, action){\n    switch (action.type) {\n        case 'CHECKING_USER':\n            return {\n                ...state,\n                isFailed: false,\n                checkingUser: true\n            };\n        case 'USER_IS_AUTH':\n            return{\n                ...state,\n                checkingUser: false,\n                isAuth: true,\n                isFailed: false,\n                error: null,\n                userData: action.payload\n            }\n        case 'AUTH_FAILED':\n            return{\n                ...state,\n                checkingUser: false,\n                isFailed: true,\n                error: action.payload\n            }\n        case 'REG_COMPLETE':\n            return{\n                ...state,\n                isFailed: false,\n                checkingUser: false,\n                signUpSuccess: true,\n                error: null\n            }\n        case 'SCORE_UPDATED':\n            return{\n                ...state,\n                userData: {\n                    ...state.userData,\n                    score: action.payload\n                } \n            }\n        case 'LOG_OUT':\n            return initialState\n        default:\n            return state\n    }\n}\n","const gameState = {\n    isLoaded: false,\n    isLoading: false,\n    data: {},\n  }\nexport function gameData(state = gameState, action) {\n    switch (action.type) {\n        case 'GET_DATA':\n            return {\n                ...state,\n                isLoading: true,\n                isLoaded: false\n            };\n        case 'GET_DATA_SUCCESS':\n            return {\n                isLoading: false,\n                isLoaded: true,\n                data: action.payload\n            }\n        case 'EXIT_GAME' || 'LOG_OUT':\n            return gameState\n        default:\n            return state;\n    }\n}","const initialState ={\n    waitingForOpponent : false,\n    dataIsLoading: false,\n    gameDataLoaded : false,\n    gotInvite: false,\n    inviteAccepted: false,\n    gameReady : false,\n    gameScore: 0,\n    gamers : null,\n    opponent : null,\n    winner : null,\n    data : null    \n}\nexport function multiplayerGameStatus(state = initialState, action) {\n    switch (action.type) {\n        case 'GET_PLAYERS_LIST':\n            return{\n                ...state,\n                gamers: action.payload\n            }\n        case 'WAITING_FOR_OPPONENT':\n            return {\n                ...state,\n                waitingForOpponent: true,\n            }\n        case 'GOT_OPPONENT':\n            return {\n                ...state,\n                waitingForOpponent: false,\n                gotInvite: false,\n                opponent: action.payload\n            }\n        case 'OPPONENST_SCORE_UPDATE':\n            return {\n                ...state,\n                opponent: {\n                    ...state.opponent,\n                    score: action.payload\n                }\n            }\n        case 'PLAYER_READY':\n            return {\n                ...state,\n                playerReady: true\n            }\n        case 'GOT_INVITE':\n            return {\n                ...state,\n                gotInvite: true\n            }\n        case 'GET_DATA':\n            return {\n                ...state,\n                dataIsLoading: true,\n                gameDataLoaded: false\n            };\n        case 'UPDATE_SCORE':\n            return{\n                ...state,\n                gameScore: action.payload\n            }\n        case 'DATA_SUCCESS':\n            return {\n                ...state,\n                waitingForOpponent: false,\n                dataIsLoading: false,\n                gameDataLoaded: true,\n                gameReady: true,\n                data: action.payload\n            }\n        case 'GOT_A_WINNER': \n            return {\n                ...state,\n                winner: action.payload\n            }\n        // case 'PLAY_AGAIN':\n        //     return {\n        //         initialState\n        //     }\n        case 'EXIT_GAME' || 'LOG_OUT':\n            return initialState\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { userStatus } from \"./user\"\nimport { gameData } from \"./game\"\nimport { multiplayerGameStatus } from './multiplayerGame'\n\nexport default combineReducers({\n    gameData,\n    userStatus,\n    multiplayerGameStatus\n})","import React, { Component } from 'react'\n\nclass MainPage extends Component{\n    render(){\n        return(\n            <div className=\"wrapper\">\n                <h1 className=\"main-logo\">Know Your Movie</h1>\n            </div>\n        )\n    }\n}\n\nexport default MainPage","import { GraphQLClient } from 'graphql-request'\nimport jwtDecode from 'jwt-decode'\n\nconst gql = new GraphQLClient(\"http://localhost:8000/graphql\", {headers: {}})\n\nfunction checkUser() {\n    return {\n        type: 'CHECKING_USER'\n    };\n}\nfunction authFailed(payload) {\n    return {\n        type: 'AUTH_FAILED',\n        payload\n    };\n}\nfunction userData(payload) {\n    return {\n        type: 'USER_IS_AUTH',\n        payload\n    }\n}\nfunction logOutUser(){\n    return {\n        type: 'LOG_OUT'\n    }\n}\n\nexport function userAuth(user, password) {\n    return async (dispatch) => {\n        try {\n            dispatch(checkUser())\n            let res = await gql.request(`query Auth($user: String!, $password: String!){\n                userAuth(user: $user, password: $password){\n                  token\n                  score\n                  error\n                }\n              }`,{user, password})\n            let { error, token, score } = res.userAuth\n            if (error){\n                dispatch(authFailed(error))\n                return\n            }\n            localStorage.setItem('token', token)\n            let data = {...jwtDecode(token), score}\n            dispatch(userData(data))\n        }\n        catch(err){\n            console.log(err);\n        }\n    }\n}\nexport function checkToken(){\n    return async (dispatch) => {\n        dispatch(checkUser())\n        \n        if(!localStorage.token){\n            dispatch(authFailed())\n            return\n        }\n        let data = jwtDecode(localStorage.token)\n        let score = await getUserScore(data.userId)\n        dispatch(userData({...data, score}))\n\n    }\n}\nasync function getUserScore(id){\n    try{\n        let res =  await gql.request(`query Score($id: Int!){\n            getUserData(id: $id){\n              score\n            }\n          }`,{id})\n        return res.getUserData.score\n    }\n    catch(err){\n        console.log(err);\n    }    \n}\nexport function logOut(){\n    return (dispatch) => {\n        dispatch(logOutUser())\n        localStorage.removeItem('token')\n    }\n}","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { userAuth } from '../../store/actions/auth';\nimport { withRouter } from 'react-router-dom' \n\n\nclass AuthForm extends Component{\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields( async (err, values) => {\n          if (!err) {\n            await this.props.userAuth(values.username, values.password)\n            if(this.props.isFailed && this.props.error){\n              message.error(this.props.error, 1.5)\n            }\n            if(this.props.isAuth){\n              this.props.history.push('/main')\n            }\n          }\n        });\n      };\n    render(){\n        \n        const { getFieldDecorator } = this.props.form\n        const { checkingUser } = this.props\n        return(\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>        \n          <Button type=\"primary\" htmlType=\"submit\" disabled={checkingUser} className=\"login-form-button\" block={true}>\n            Log in {checkingUser? <Icon type=\"loading\" /> : null}\n          </Button>\n          Or <NavLink to=\"/signup\">register now!</NavLink>\n        </Form.Item>\n      </Form>\n    );\n        \n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.userStatus.isAuth,\n    isFailed: state.userStatus.isFailed,\n    error: state.userStatus.error,\n    checkingUser: state.userStatus.checkingUser\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userAuth: (user, password) => dispatch(userAuth(user, password))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(AuthForm))","import React, { Component } from 'react'\nimport AuthForm from './components/AuthForm'\nimport { Form } from 'antd'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass AuthPage extends Component{\n    \n    render(){\n        const { isAuth } = this.props\n        if (isAuth) {\n            return <Redirect to=\"/main\" />\n        }\n        const MainAuthForm = Form.create()(AuthForm)\n        return(\n           <div className=\"wrapper\">\n               <h1>Sign In</h1>\n               <MainAuthForm />\n           </div>\n    );\n        \n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(AuthPage)","import React, { Component } from 'react'\nimport { Menu, Button, Icon } from 'antd'\nimport { NavLink } from 'react-router-dom' \nimport { connect } from 'react-redux'\nimport './NavBar.css'\nimport { logOut, checkToken } from '../../../store/actions/auth'\nconst { SubMenu } = Menu\nclass NavBar extends Component{\n    componentDidMount(){\n        this.props.checkToken()\n    }\n    render(){\n        const { isAuth, userData } = this.props\n        return(\n            <header className=\"header-nav\">\n                <Menu mode=\"horizontal\" theme=\"dark\" selectable = {false} >\n                <Menu.Item key=\"main\" className=\"logo\">\n                    <NavLink to=\"/\">Know Your Movie</NavLink>\n                </Menu.Item>\n                <Menu.Item key=\"single-game\">\n                    <NavLink to=\"/single-game\">Start Game</NavLink>\n                </Menu.Item>\n                <Menu.Item key=\"multiplayer-game\">\n                    <NavLink to=\"/multiplayer-game\">Start Co-op Game</NavLink>\n                </Menu.Item>\n                {isAuth ? \n                    // <>\n                    // <div key=\"user\">\n                    //     {userData.username}\n                    // </div>\n                    // <Button onClick={this.props.logOut}>\n                    //     Log Out\n                    // </Button>\n                    // </>\n                    <SubMenu \n                        title={\n                            <span className=\"submenu-title-wrapper\">\n                            <Icon type=\"user\" />\n                            {userData.username}\n                            </span>\n                        }>\n                        <Menu.Item key=\"user\">\n                            <Icon type=\"setting\" />Current Score : {userData.score}\n                        </Menu.Item>\n                        <Menu.Item key=\"logout\">\n                        <Button onClick={this.props.logOut}>\n                         Log Out\n                     </Button>\n                        </Menu.Item>\n                    </SubMenu>\n                    :\n                  \n                    <Menu.Item key=\"auth\">\n                        <NavLink to=\"/auth\">Log In</NavLink>\n                    </Menu.Item>\n                    // <Menu.Item key=\"signup\">\n                    //     <NavLink to=\"/signup\">Sign Up</NavLink>\n                    // </Menu.Item>\n                    \n                }\n                \n                \n                </Menu>\n            </header>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth,\n      userData: state.userStatus.userData\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      logOut: () => dispatch(logOut()),\n      checkToken: () => dispatch(checkToken())\n    }\n  }\n  export default connect(mapStateToProps,mapDispatchToProps)(NavBar)","import { GraphQLClient } from 'graphql-request'\n\nconst gql = new GraphQLClient(\"http://localhost:8000/graphql\", {headers: {}})\n\nfunction checkUser() {\n    return {\n        type: 'CHECKING_USER'\n    };\n}\nfunction authFailed(payload) {\n    return {\n        type: 'AUTH_FAILED',\n        payload\n    };\n}\nfunction signupComplete() {\n    return {\n        type: 'REG_COMPLETE'\n    };\n}\n\nexport function userSignup(nickname, password, email){\n    return async (dispatch) => {\n        try {\n            dispatch(checkUser())\n            let res = await gql.request(`mutation CreateUser($nickname: String!, $password: String!, $email: String!) {\n                createUser(user: $nickname, password: $password, email: $email) {\n                  user\n                  error\n                }\n              }`, {nickname, password, email})\n            let {error} = res.createUser\n            if(error){\n                dispatch(authFailed(error))\n                return\n            }\n            dispatch(signupComplete())\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./redusers\"\nimport { composeWithDevTools }  from 'redux-devtools-extension'\n\nexport default function configureStore(initialState){\n    return createStore( \n        rootReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(thunk))\n        \n    )\n}","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Tooltip, message } from 'antd';\nimport { withRouter } from 'react-router-dom' \nimport { connect } from 'react-redux'\nimport \"./RegForm.css\"\nimport { userSignup } from '../../../store/actions/signup'\n\nclass RegForm extends Component{\n    state = {\n        confirmDirty: false\n    };\n    componentWillMount(){\n        if(this.props.isAuth){\n          this.props.history.push('/main')\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n            await this.props.userSignup(values)\n            if(this.props.isFailed){\n                message.error(this.props.error, 1.5)\n            }\n            if(this.props.signUpSuccess){\n                message.success('Registration Succsess')\n                this.props.history.push('/main')\n            }\n          }\n        });\n    };\n    handleConfirmBlur = e => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Two passwords that you enter is inconsistent!');\n        } else {\n          callback();\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const { checkingUser } = this.props\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 8 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span: 16 },\n            },\n          };\n          const tailFormItemLayout = {\n            wrapperCol: {\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 8,\n              },\n            },\n          };\n        return(\n            <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"reg-form\">\n                <Form.Item label=\"E-mail\">\n                    {getFieldDecorator('email', {\n                        rules: [\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                        ],\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator('password', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                        {\n                            validator: this.validateToNextPassword,\n                        },\n                        ],\n                    })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" hasFeedback>\n                    {getFieldDecorator('confirm', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        {\n                            validator: this.compareToFirstPassword,\n                        },\n                        ],\n                    })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                </Form.Item>\n                <Form.Item\n                    label={\n                        <span>\n                        Nickname&nbsp;\n                        <Tooltip title=\"What do you want others to call you?\">\n                            <Icon type=\"question-circle-o\" />\n                        </Tooltip>\n                        </span>\n                    }\n                    >\n                    {getFieldDecorator('nickname', {\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" disabled={checkingUser} htmlType=\"submit\">\n                        Register {checkingUser? <Icon type=\"loading\" /> : null}\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth,\n      isFailed: state.userStatus.isFailed,\n      error: state.userStatus.error,\n      checkingUser: state.userStatus.checkingUser,\n      signUpSuccess: state.userStatus.signUpSuccess\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      userSignup: ({nickname, password, email}) => dispatch(userSignup(nickname, password, email))\n    }\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(RegForm))\n","import React, { Component } from 'react'\nimport { Form } from 'antd'\nimport RegForm from './components/RegForm/RegForm';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass RegPage extends Component{\n    \n    render(){\n        const { isAuth } = this.props\n        if (isAuth) {\n            return <Redirect to=\"/main\" />\n        }\n        const MainRegForm = Form.create()(RegForm)\n        return(\n            <div className=\"wrapper\">\n                <h1>The Registration Page</h1>\n                <MainRegForm />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(RegPage)","import React, { Component } from 'react'\nimport { Button, Icon } from 'antd'\nimport './GameArea.css'\nimport { connect } from 'react-redux'\nimport { getMovieData, updateScore } from '../../../store/actions/game'\nimport io from 'socket.io-client'\nlet socket = null\nclass GameArea extends Component{\n    constructor(props){\n        super(props)\n        socket = io.connect('http://localhost:8000')\n    }\n    state = {\n        answered: false\n    }\n    // console.log(socket);\n    componentWillMount = () => {\n        this.props.getMovieData(socket)\n        // console.log(socket);\n    }\n    componentWillUnmount() {\n        socket.disconnect()\n    }\n    checkTheAnswer = (e) => {\n        this.setState({\n            answered: true\n        })\n        let answer = this.props.gameData.movies.find((item) => item.answer === true)\n        let btnAnswer = e.target.style\n        if(answer.title === e.target.name){        \n            btnAnswer.background = \"#179317\"\n            btnAnswer.borderColor = \"green\"\n            this.props.updateScore(this.props.userId, socket)\n        }\n        else{\n            btnAnswer.background = \"#ef2f2f\"\n            btnAnswer.borderColor = \"red\"\n            let correctButton = document.getElementsByClassName(answer.mdb_id.toString())\n            correctButton[0].style.background = \"#179317\"\n            correctButton[0].style.borderColor = \"green\"\n        }\n    }\n    nextQuestion = (e) => {\n        this.setState({\n            answered: false\n        })\n        this.props.getMovieData(socket)\n    }\n    \n    render(){\n        const { isLoading, isLoaded, gameData } = this.props\n        if (isLoading) return <div><Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /></div>\n        if (!isLoaded || !gameData) return null\n        \n        return(\n            <article className=\"game-area\">\n                <h1>Choose the correct movie title</h1>\n                <div className=\"game-img\" style={{background : `url(\"${gameData.imageURL}\") no-repeat`}} /> \n                <div className=\"button-answers\">\n                    {gameData.movies.map((item)=> \n                        <Button \n                            type=\"primary\" \n                            disabled={this.state.answered} \n                            key={item.mdb_id}\n                            className={item.mdb_id.toString()}\n                            name={item.title} \n                            onClick={this.checkTheAnswer}> \n                            {item.title}\n                        </Button>\n                    )}\n                </div>\n                <Button style={{display: this.state.answered ? \"block\" : \"none\" }} onClick={this.nextQuestion} className=\"next-button\" >Next</Button>\n            </article>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      gameData: state.gameData.data,\n      isLoading: state.gameData.isLoading,\n      isLoaded: state.gameData.isLoaded,\n      userId: state.userStatus.userData.userId,\n      username: state.userStatus.userData.username\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getMovieData: (socket) => dispatch(getMovieData(socket)),\n      updateScore: (userId, socket) => dispatch(updateScore(userId, socket))\n      \n\n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(GameArea)","const gameData = () => ({\n        type: 'GET_DATA'\n})\nconst gameDataSuccsess = (payload) => ({\n        type: 'GET_DATA_SUCCESS',\n        payload\n})\nconst scoreUpdated = (payload) => ({\n        type: 'SCORE_UPDATED',\n        payload\n})\nexport const updateScore = (userId, socket) => {\n    return (dispatch) => {\n        socket.emit('updateScore', userId, (data) => dispatch(scoreUpdated(data)))\n    }\n}\n\nexport const getMovieData = (socket) => {\n    return (dispatch) => {\n        dispatch(gameData())\n        socket.emit('getGame', (data) => dispatch(gameDataSuccsess(data)))\n    }\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport GameArea from './components/GameArea/GameArea';\n\nclass GamePage extends Component{ \n    render(){\n        const { isAuth } = this.props\n        if (!isAuth) {\n            return <Redirect to=\"/auth\" />\n        }\n        return(\n                <div className=\"wrapper\">\n                    <GameArea />\n                </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(GamePage)","import React, { Component } from 'react'\nimport { Button, Icon } from 'antd'\nimport './CoopGameArea.css'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom' \nimport { \n    getPlayersList, \n    invitePlayer, \n    gotInvite, \n    readyForGame, \n    exitGame, \n    gameData, \n    nextMovie, \n    updateScore, \n    gotaWinner,\n    startAgain,\n    globalScoreUpdate } from '../../../store/actions/multiplayerGame'\nimport io from 'socket.io-client'\nlet socket = null\n\nclass CoopGameArea extends Component{\n    constructor(props){\n        super(props)\n        socket = io.connect('http://localhost:8000')\n        socket.emit('multiConnect', {username: this.props.username, userId: this.props.userId})\n        socket.on('gamers', (data) => {\n            this.props.getPlayersList(data)\n        })\n        socket.on('gotInvite', (data) => {\n            this.props.gotInvite(data)\n        })\n        socket.on('readyForGame', () => {\n        })\n        socket.on('getGameTask', (data) => {\n            this.props.movieData(data)\n        })\n        socket.on('gotaWinner', (data) => {\n            this.props.gotaWinner(data)\n        })\n        socket.on('updateUserScore', (data) => {\n            this.props.globalScoreUpdate(data)\n        })\n    }\n    state = {\n        answered: false\n    }\n    acceptTheInvite = () => {\n        socket.emit('readyForGame')\n        this.props.readyForGame()\n\n    }\n    componentWillUnmount() {\n        socket.disconnect()\n        this.props.exitGame()\n    }\n    checkTheAnswer = (e) => {\n        this.setState({\n            answered: true\n        })\n        let answer = this.props.gameData.movies.find((item) => item.answer === true)\n        let btnAnswer = e.target.style\n        if(answer.title === e.target.name){        \n            btnAnswer.background = \"#179317\"\n            btnAnswer.borderColor = \"green\"            \n            this.props.updateScore(this.props.playerScore + 10)\n        }\n        else{\n            btnAnswer.background = \"#ef2f2f\"\n            btnAnswer.borderColor = \"red\"\n            let correctButton = document.getElementsByClassName(answer.mdb_id.toString())\n            correctButton[0].style.background = \"#179317\"\n            correctButton[0].style.borderColor = \"green\"\n            this.props.updateScore(this.props.playerScore - 5)\n        }\n    }\n    nextQuestion = (e) => {\n        this.setState({\n            answered: false\n        })\n        this.props.nextMovie(socket, this.props.playerScore)\n    }\n    GamerWinner = () => (\n        <>\n            <h1>Congratulations!</h1> <div>You are a winner! You got a 200 points.</div>\n        </>\n    )\n    OpponentWinner = (props) => (\n        <>\n            <h1>{props.opponent} is a winner</h1> <div>Better luck next time =(</div>\n        </>\n    )\n\n    render(){\n        const { gamers, opponent, playerReady, gameData, waitingForOpponent, username, playerScore, winner } = this.props\n        \n        if(!gamers) return <div><Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /></div>\n        \n        if(playerReady && opponent && !gameData) return <div><Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /></div>\n        \n        if(winner) return (\n            <article className=\"game-area\">\n                {winner === username ? <this.GamerWinner /> : <this.OpponentWinner opponent = {opponent.username}/>}\n                <Button type=\"primary\" onClick={() => this.props.history.push('/main')}>Got it</Button>\n            </article>\n        )\n        \n        if(playerReady && opponent && gameData) return (\n                <article className=\"game-area\">\n                    <div className=\"game-info\">\n                        <div>Game {gameData.gameNumber} of 10</div>\n                        <div>Your Game Score: {playerScore}</div>\n                        <div>{opponent.username} Game Score: {opponent.score}</div>\n                    </div>\n                    <div className=\"game-img\" style={{background : `url(\"${gameData.imageURL}\") 50% 50% no-repeat`}} /> \n                    <div className=\"button-answers\">\n                        {gameData.movies.map((item)=> \n                            <Button \n                                type=\"primary\" \n                                disabled={this.state.answered || waitingForOpponent} \n                                key={item.mdb_id}\n                                className={item.mdb_id.toString()}\n                                name={item.title} \n                                onClick={this.checkTheAnswer}> \n                                {item.title}\n                            </Button>\n                        )}\n                    </div>\n                    <Button \n                        type=\"primary\" \n                        style={{cursor: \"pointer\", display: this.state.answered || waitingForOpponent ? \"block\" : \"none\" }}\n                        disabled={waitingForOpponent} \n                        onClick={this.nextQuestion} \n                        className=\"next-button\" >\n                            {waitingForOpponent ? \"Waiting for opponent answer...\" : \"Next\"}\n                    </Button>\n                </article>\n            )\n        \n        return(\n            <article className=\"game-area\">\n                <h2>Choose your opponent</h2>\n                {opponent? <Button onClick={this.acceptTheInvite}>Accept {opponent.username}</Button> : null}\n                {gamers.length === 1? <div>There are no players online =(</div> : \n                    gamers.map(item => \n                        <div key={item.userId} style={{display: item.nick === username? \"none\" : \"block\" }}>{item.nick} <Button disabled={item.ready} style={{visibility: item.nick === username ? \"hidden\": \"visible\"}} size={\"small\"} onClick={() => this.props.invitePlayer(socket, item.id)}>Invite</Button></div>\n                    )\n                }\n            </article>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      gamers: state.multiplayerGameStatus.gamers,\n      opponent: state.multiplayerGameStatus.opponent,\n      userId: state.userStatus.userData.userId,\n      username: state.userStatus.userData.username,\n      playerReady: state.multiplayerGameStatus.playerReady,\n      gameData: state.multiplayerGameStatus.data,\n      waitingForOpponent: state.multiplayerGameStatus.waitingForOpponent,\n      playerScore: state.multiplayerGameStatus.gameScore,\n      winner: state.multiplayerGameStatus.winner\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getPlayersList: (data) => dispatch(getPlayersList(data)),\n      invitePlayer: (socket, opponent) => dispatch(invitePlayer(socket, opponent)),\n      gotInvite: (data) => dispatch(gotInvite(data)),\n      readyForGame: (socket) => dispatch(readyForGame(socket)),\n      exitGame: () => dispatch(exitGame()),\n      movieData: (data) => dispatch(gameData(data)),\n      nextMovie: (socket, data) => dispatch(nextMovie(socket, data)),\n      updateScore: ( data) => dispatch(updateScore( data)),\n      gotaWinner: (data) => dispatch(gotaWinner(data)),\n      startAgain: () => dispatch(startAgain()),\n      globalScoreUpdate: (data) => dispatch(globalScoreUpdate(data))\n        \n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(withRouter(CoopGameArea))\n","const waitForOpponent = () => ({type: 'WAITING_FOR_OPPONENT'})\n\nconst gotOpponent = (payload) => ({type: 'GOT_OPPONENT', payload})\n\nconst getData = () => ({type: 'GET_DATA'})\n\nconst playerReady = () => ({type: 'PLAYER_READY'})\n\nconst updOpponentsScore = (payload) => ({type: 'OPPONENST_SCORE_UPDATE', payload})\n\nconst winner = (payload) => ({type: 'GOT_A_WINNER', payload})\n\nconst getDataSuccess = (payload) => ({type: 'DATA_SUCCESS',payload})\n\nconst resetGame = () => ({type: 'PLAY_AGAIN'})\n\nconst sessionScoreUpdate = (payload) => ({type: 'UPDATE_SCORE', payload})\n\nconst scoreUpdate = (payload) => ({type: 'SCORE_UPDATED', payload})\n\nconst endGame = () => ({type: 'EXIT_GAME'})\n\nconst playersList = (payload) => ({type: 'GET_PLAYERS_LIST', payload})\n\nexport const getPlayersList = (data) => {\n    return (dispatch) => {\n        dispatch(playersList(data))\n    }\n}\nexport const invitePlayer = (socket, opponent) => {\n    return (dispatch) => {\n        dispatch(waitForOpponent())\n        socket.emit('invite', opponent, (data) => {\n        })\n        socket.emit('readyForGame')\n        dispatch(playerReady())\n\n    }\n}\nexport const gotInvite = (data) => {\n    return (dispatch) => {\n        dispatch(gotOpponent(data))\n    }\n}\nexport const readyForGame =() => {\n    return (dispatch) => {\n        dispatch(playerReady())\n\n    }\n}\nexport const nextMovie = (socket, data)=> {\n    return (dispatch) => {\n        dispatch(waitForOpponent())\n        socket.emit('nextMovie', (data))\n    }\n}\nexport const updateScore = (data) => {\n    return (dispatch) => {\n        dispatch(sessionScoreUpdate(data))\n    }\n}\nexport const exitGame =() => {\n    return (dispatch) => {\n        dispatch(endGame())\n    }\n}\nexport const gameData =({data, score}) => {\n    return (dispatch) => {\n        if(score) dispatch(updOpponentsScore(score))\n        dispatch(getData())\n        dispatch(getDataSuccess(data))\n    }\n}\nexport const gotaWinner = (data) => {\n    return(dispatch) => {\n        dispatch(winner(data))\n    }\n}\nexport const globalScoreUpdate = (data) => {\n    return (dispatch) => {\n        dispatch(scoreUpdate(data))\n    }\n}\nexport const startAgain = () => {\n    return (dispatch) => {\n        dispatch(resetGame())\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CoopGameArea from './components/CoopGameArea/CoopGameArea';\n\nclass MultiGamePage extends Component{ \n    render(){\n        const { isAuth } = this.props\n        if (!isAuth) {\n            return <Redirect to=\"/auth\" />\n        }\n        return(\n                <div className=\"wrapper\">\n                    <CoopGameArea />\n                </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(MultiGamePage)","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\n\nimport MainPage from './pages/Main';\nimport AuthPage from './pages/Auth';\nimport NavBar from './pages/components/NavBar/NavBar';\nimport RegPage from './pages/Register';\nimport GamePage from './pages/Game';\nimport MultiplayerGame from './pages/MultiplayerGame';\n\nconst store = configureStore()\nstore.subscribe(() => {\n  store.getState();\n});\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <NavBar />\n        <Switch>\n          <Redirect from=\"/\" to=\"/main\" exact/>\n          <Route path=\"/main\" component={MainPage} />\n          <Route path=\"/auth\" component={AuthPage} />\n          <Route path=\"/signup\" component={RegPage} />\n          <Route path=\"/single-game\" component={GamePage} />\n          <Route path=\"/multiplayer-game\" component={MultiplayerGame} />\n        </Switch>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}