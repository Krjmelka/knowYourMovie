{"version":3,"sources":["store/redusers/user.js","store/redusers/game.js","store/redusers/multiplayerGame.js","store/redusers/index.js","pages/Main.js","store/actions/auth.js","pages/components/AuthForm/AuthForm.js","pages/Auth.js","pages/components/NavBar/NavBar.js","store/actions/signup.js","store/configureStore.js","pages/components/RegForm/RegForm.js","pages/Register.js","pages/components/GameArea/GameArea.js","store/actions/game.js","pages/Game.js","pages/components/CoopGameArea/CoopGameArea.js","store/actions/multiplayerGame.js","pages/MultiplayerGame.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isAuth","isFailed","checkingUser","signUpSuccess","userData","error","gameState","isLoaded","isLoading","data","waitingForOpponent","dataIsLoading","gameDataLoaded","playerReady","gameScore","gamers","opponent","winner","combineReducers","gameData","state","arguments","length","undefined","action","type","Object","objectSpread","payload","userStatus","score","multiplayerGameStatus","MainPage","_this","this","react_default","a","createElement","className","es_button","onClick","props","history","push","Component","gql","GraphQLClient","headers","authFailed","getUserScore","_callee3","id","res","regenerator_default","wrap","_context3","prev","next","request","sent","abrupt","getUserData","t0","console","log","stop","AuthForm","handleSubmit","e","preventDefault","form","validateFields","_ref","asyncToGenerator","mark","_callee","err","values","_context","userAuth","username","password","message","goBack","_x","_x2","apply","getFieldDecorator","es_form","onSubmit","Item","rules","required","input","prefix","icon","style","color","placeholder","htmlType","disabled","block","react_router_dom","to","connect","dispatch","user","_res$userAuth","token","localStorage","setItem","jwtDecode","withRouter","AuthPage","react_router","MainAuthForm","create","NavBar","collapsed","handleClick","setState","checkToken","_this$props","layout","Header","width","menu","mode","theme","selectable","lineHeight","key","float","cursor","logOut","removeItem","_ref2","_callee2","_context2","userId","RegForm","confirmDirty","validateFieldsAndScroll","userSignup","success","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","assign","labelCol","xs","span","sm","wrapperCol","label","hasFeedback","validator","Password","onBlur","tooltip","title","min","max","offset","nickname","email","createUser","RegPage","MainRegForm","socket","GameArea","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","answered","componentWillMount","getMovieData","checkTheAnswer","answer","movies","find","item","btnAnswer","name","background","borderColor","updateScore","correctButton","document","getElementsByClassName","mdb_id","toString","nextQuestion","io","disconnect","_this2","fontSize","concat","imageURL","map","display","emit","GamePage","components_GameArea_GameArea","CoopGameArea","playerScore","nextMovie","gamerWinner","Fragment","opponentWinner","drawResult","on","getPlayersList","gotInvite","movieData","gotaWinner","globalScoreUpdate","canceledGame","exitGame","draw","gameNumber","margin","readyForGame","removeOpponent","size","nick","ready","waiting","visibility","invitePlayer","getDataSuccess","MultiGamePage","components_CoopGameArea_CoopGameArea","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","App","es","components_NavBar_NavBar","from","exact","path","component","MultiplayerGame","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddd8b2c9.chunk.js","sourcesContent":["const initialState = {\n    isAuth: false,\n    isFailed: false,\n    checkingUser: false,\n    signUpSuccess: false,\n    userData: {},\n    error: null\n}\n\nexport function userStatus(state = initialState, action){\n    switch (action.type) {\n        case 'CHECKING_USER':\n            return {\n                ...state,\n                isFailed: false,\n                checkingUser: true\n            };\n        case 'USER_IS_AUTH':\n            return{\n                ...state,\n                checkingUser: false,\n                isAuth: true,\n                isFailed: false,\n                error: null,\n                userData: action.payload\n            }\n        case 'AUTH_FAILED':\n            return{\n                ...state,\n                checkingUser: false,\n                isFailed: true,\n                error: action.payload\n            }\n        case 'REG_COMPLETE':\n            return{\n                ...state,\n                isFailed: false,\n                checkingUser: false,\n                signUpSuccess: true,\n                error: null\n            }\n        case 'SCORE_UPDATED':\n            return{\n                ...state,\n                userData: {\n                    ...state.userData,\n                    score: action.payload\n                } \n            }\n        case 'LOG_OUT':\n            return initialState\n        default:\n            return state\n    }\n}\n","const gameState = {\n    isLoaded: false,\n    isLoading: false,\n    data: {},\n  }\nexport function gameData(state = gameState, action) {\n    switch (action.type) {\n        case 'GET_DATA':\n            return {\n                ...state,\n                isLoading: true,\n                isLoaded: false\n            };\n        case 'GET_DATA_SUCCESS':\n            return {\n                isLoading: false,\n                isLoaded: true,\n                data: action.payload\n            }\n        case 'EXIT_GAME' || 'LOG_OUT':\n            return gameState\n        default:\n            return state;\n    }\n}","const initialState ={\n    waitingForOpponent : false,\n    dataIsLoading: false,\n    gameDataLoaded : false,\n    playerReady: false,\n    gameScore: 0,\n    gamers : null,\n    opponent : null,\n    winner : null,\n    data : null    \n}\nexport function multiplayerGameStatus(state = initialState, action) {\n    switch (action.type) {\n        case 'GET_PLAYERS_LIST':\n            return{\n                ...state,\n                gamers: action.payload\n            }\n        case 'WAITING_FOR_OPPONENT':\n            return {\n                ...state,\n                waitingForOpponent: true,\n            }\n        case 'GOT_OPPONENT':\n            return {\n                ...state,\n                waitingForOpponent: false,\n                opponent: action.payload\n            }\n        case 'OPPONENST_SCORE_UPDATE':\n            return {\n                ...state,\n                opponent: {\n                    ...state.opponent,\n                    score: action.payload\n                }\n            }\n        case 'PLAYER_READY':\n            return {\n                ...state,\n                playerReady: true\n            }\n        case 'GET_DATA':\n            return {\n                ...state,\n                dataIsLoading: true,\n                gameDataLoaded: false\n            };\n        case 'UPDATE_SCORE':\n            return{\n                ...state,\n                gameScore: action.payload\n            }\n        case 'DATA_SUCCESS':\n            return {\n                ...state,\n                waitingForOpponent: false,\n                dataIsLoading: false,\n                gameDataLoaded: true,\n                data: action.payload\n            }\n        case 'GOT_A_WINNER': \n            return {\n                ...state,\n                winner: action.payload\n            }\n        case 'REMOVE_OPPONENT':\n            return {\n                ...state,\n                opponent: null\n            }\n        case 'GAME_CANCELED':\n            return {\n                ...state,\n                waitingForOpponent: false,\n                playerReady: false,\n                opponent: null\n            }\n        case 'EXIT_GAME' || 'LOG_OUT':\n            return initialState\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { userStatus } from \"./user\"\nimport { gameData } from \"./game\"\nimport { multiplayerGameStatus } from './multiplayerGame'\n\nexport default combineReducers({\n    gameData,\n    userStatus,\n    multiplayerGameStatus\n})","import React, { Component } from 'react'\nimport { Button } from 'antd'\n\nclass MainPage extends Component{\n    render(){\n        return(\n            <div className=\"wrapper\">\n                <h1 className=\"main-logo\">Know Your Movie</h1>\n                <div className=\"main-text\">\n                    <p>Wellcome to online interactive game</p>\n                    <p>to choose the correct movie title</p>\n                    <p>by image</p>\n                </div>\n                <div className=\"main-buttons\">\n                    <Button type=\"primary\" onClick={() => this.props.history.push('/single-game')}>Single Game</Button>\n                    <Button type=\"primary\" onClick={() => this.props.history.push('/multiplayer-game')}>Multiplayer Game</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainPage","import { GraphQLClient } from 'graphql-request'\nimport jwtDecode from 'jwt-decode'\n\nconst gql = new GraphQLClient(\"http://localhost:8000/graphql\", {headers: {}})\n\nfunction checkUser() {\n    return {\n        type: 'CHECKING_USER'\n    };\n}\nfunction authFailed(payload) {\n    return {\n        type: 'AUTH_FAILED',\n        payload\n    };\n}\nfunction userData(payload) {\n    return {\n        type: 'USER_IS_AUTH',\n        payload\n    }\n}\nfunction logOutUser(){\n    return {\n        type: 'LOG_OUT'\n    }\n}\n\nexport function userAuth(user, password) {\n    return async (dispatch) => {\n        try {\n            dispatch(checkUser())\n            let res = await gql.request(`query Auth($user: String!, $password: String!){\n                userAuth(user: $user, password: $password){\n                  token\n                  score\n                  error\n                }\n              }`,{user, password})\n            let { error, token, score } = res.userAuth\n            if (error){\n                dispatch(authFailed(error))\n                return\n            }\n            localStorage.setItem('token', token)\n            let data = {...jwtDecode(token), score}\n            dispatch(userData(data))\n        }\n        catch(err){\n            console.log(err);\n        }\n    }\n}\nexport function checkToken(){\n    return async (dispatch) => {\n        dispatch(checkUser())\n        \n        if(!localStorage.token){\n            dispatch(authFailed())\n            return\n        }\n        let data = jwtDecode(localStorage.token)\n        let score = await getUserScore(data.userId)\n        dispatch(userData({...data, score}))\n\n    }\n}\nasync function getUserScore(id){\n    try{\n        let res =  await gql.request(`query Score($id: Int!){\n            getUserData(id: $id){\n              score\n            }\n          }`,{id})\n        return res.getUserData.score\n    }\n    catch(err){\n        console.log(err);\n    }    \n}\nexport function logOut(){\n    return (dispatch) => {\n        dispatch(logOutUser())\n        localStorage.removeItem('token')\n    }\n}","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { userAuth } from '../../../store/actions/auth';\nimport { withRouter } from 'react-router-dom' \n\n\nclass AuthForm extends Component{\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields( async (err, values) => {\n          if (!err) {\n            await this.props.userAuth(values.username, values.password)\n            if(this.props.isFailed && this.props.error){\n              message.error(this.props.error, 1.5)\n            }\n            if(this.props.isAuth){\n              this.props.history.goBack()\n            }\n          }\n        });\n      };\n    render(){\n        \n        const { getFieldDecorator } = this.props.form\n        const { checkingUser } = this.props\n        return(\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>        \n          <Button type=\"primary\" htmlType=\"submit\" disabled={checkingUser} className=\"login-form-button\" block={true}>\n            Log in {checkingUser? <Icon type=\"loading\" /> : null}\n          </Button>\n          Or <NavLink to=\"/signup\">register now!</NavLink>\n        </Form.Item>\n      </Form>\n    );\n        \n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.userStatus.isAuth,\n    isFailed: state.userStatus.isFailed,\n    error: state.userStatus.error,\n    checkingUser: state.userStatus.checkingUser\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userAuth: (user, password) => dispatch(userAuth(user, password))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(AuthForm))","import React, { Component } from 'react'\nimport AuthForm from './components/AuthForm/AuthForm'\nimport { Form } from 'antd'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass AuthPage extends Component{\n    \n    render(){\n        const { isAuth } = this.props\n        if (isAuth) {\n            return <Redirect to=\"/main\" />\n        }\n        const MainAuthForm = Form.create()(AuthForm)\n        return(\n           <div className=\"wrapper\">\n               <h1>Sign In</h1>\n               <MainAuthForm />\n           </div>\n    );\n        \n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(AuthPage)","import React, { Component } from 'react'\nimport { Menu, Button, Layout } from 'antd'\nimport { NavLink } from 'react-router-dom' \nimport { connect } from 'react-redux'\nimport './NavBar.css'\nimport { logOut, checkToken } from '../../../store/actions/auth'\n// const { SubMenu } = Menu\nclass NavBar extends Component{\n    state = {\n        collapsed: false,\n    }\n    componentDidMount(){\n        this.props.checkToken()\n    }\n    handleClick = e => {\n        console.log('click ', e);\n        this.setState({\n            collapsed: !this.state.collapsed,\n        })\n    }\n    render(){\n        const { isAuth, userData } = this.props\n        return(\n\n                <Layout.Header style={ { width: '100%'}}>\n                <Menu mode=\"horizontal\" theme=\"dark\" selectable = {false} style={{ lineHeight: '64px' }}>\n                    <Menu.Item key=\"main\" className=\"logo\">\n                        <NavLink to=\"/\">Know Your Movie</NavLink>\n                    </Menu.Item>\n                    <Menu.Item key=\"single-game\">\n                        <NavLink to=\"/single-game\">Single Game</NavLink>\n                    </Menu.Item>\n                    <Menu.Item key=\"multiplayer-game\">\n                        <NavLink to=\"/multiplayer-game\">Multiplayer Game</NavLink>\n                    </Menu.Item>\n                {isAuth ? \n                    <Menu.Item key=\"user\" className=\"user-auth\" style={{float: \"right\", cursor: \"default\"}}>\n                        {userData.username} : <span className=\"user-score\">{userData.score}</span>\n                        <Button onClick={this.props.logOut} type=\"primary\">\n                              Log Out\n                        </Button>\n                    </Menu.Item>\n                    :\n                    <Menu.Item key=\"auth\" style={{float: 'right'}}>\n                        <NavLink to=\"/auth\">Log In</NavLink>\n                    </Menu.Item>\n                }\n                </Menu>\n                </Layout.Header>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth,\n      userData: state.userStatus.userData\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      logOut: () => dispatch(logOut()),\n      checkToken: () => dispatch(checkToken())\n    }\n  }\n  export default connect(mapStateToProps,mapDispatchToProps)(NavBar)","import { GraphQLClient } from 'graphql-request'\n\nconst gql = new GraphQLClient(\"http://localhost:8000/graphql\", {headers: {}})\n\nfunction checkUser() {\n    return {\n        type: 'CHECKING_USER'\n    };\n}\nfunction authFailed(payload) {\n    return {\n        type: 'AUTH_FAILED',\n        payload\n    };\n}\nfunction signupComplete() {\n    return {\n        type: 'REG_COMPLETE'\n    };\n}\n\nexport function userSignup(nickname, password, email){\n    return async (dispatch) => {\n        try {\n            dispatch(checkUser())\n            let res = await gql.request(`mutation CreateUser($nickname: String!, $password: String!, $email: String!) {\n                createUser(user: $nickname, password: $password, email: $email) {\n                  user\n                  error\n                }\n              }`, {nickname, password, email})\n            let {error} = res.createUser\n            if(error){\n                dispatch(authFailed(error))\n                return\n            }\n            dispatch(signupComplete())\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./redusers\"\nimport { composeWithDevTools }  from 'redux-devtools-extension'\n\nexport default function configureStore(initialState){\n    return createStore( \n        rootReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(thunk))\n        \n    )\n}","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Tooltip, message } from 'antd';\nimport { withRouter } from 'react-router-dom' \nimport { connect } from 'react-redux'\nimport \"./RegForm.css\"\nimport { userSignup } from '../../../store/actions/signup'\n\nclass RegForm extends Component{\n    state = {\n        confirmDirty: false\n    };\n    componentWillMount(){\n        if(this.props.isAuth){\n          this.props.history.push('/main')\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n            await this.props.userSignup(values)\n            if(this.props.isFailed){\n                message.error(this.props.error, 1.5)\n            }\n            if(this.props.signUpSuccess){\n                message.success('Registration Succsess')\n                this.props.history.push('/main')\n            }\n          }\n        });\n    };\n    handleConfirmBlur = e => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Two passwords that you enter is inconsistent!');\n        } else {\n          callback();\n        }\n    };\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n    render(){\n        const { getFieldDecorator } = this.props.form;\n        const { checkingUser } = this.props\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 8 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span: 16 },\n            },\n          };\n          const tailFormItemLayout = {\n            wrapperCol: {\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 8,\n              },\n            },\n          };\n        return(\n            <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"reg-form\">\n                <Form.Item label=\"E-mail\">\n                    {getFieldDecorator('email', {\n                        rules: [\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                        ],\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator('password', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                        {\n                            validator: this.validateToNextPassword,\n                        },\n                        ],\n                    })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" hasFeedback>\n                    {getFieldDecorator('confirm', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        {\n                            validator: this.compareToFirstPassword,\n                        },\n                        ],\n                    })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                </Form.Item>\n                <Form.Item\n                    label={\n                        <span>\n                        Nickname&nbsp;\n                        <Tooltip title=\"What do you want others to call you?\">\n                            <Icon type=\"question-circle-o\" />\n                        </Tooltip>\n                        </span>\n                    }\n                    >\n                    {getFieldDecorator('nickname', {\n                        rules: [{ \n                            required: true, \n                            message: 'Please input your nickname!'\n                        },{\n                            min: 4,\n                            message: 'Nickname must be 4 symbols minimum!'\n                        },{\n                            max: 10,\n                            message: 'Nickname must be 10 symbols maximum!'\n                        }],\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" disabled={checkingUser} htmlType=\"submit\">\n                        Register {checkingUser? <Icon type=\"loading\" /> : null}\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth,\n      isFailed: state.userStatus.isFailed,\n      error: state.userStatus.error,\n      checkingUser: state.userStatus.checkingUser,\n      signUpSuccess: state.userStatus.signUpSuccess\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      userSignup: ({nickname, password, email}) => dispatch(userSignup(nickname, password, email))\n    }\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(RegForm))\n","import React, { Component } from 'react'\nimport { Form } from 'antd'\nimport RegForm from './components/RegForm/RegForm';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass RegPage extends Component{\n    \n    render(){\n        const { isAuth } = this.props\n        if (isAuth) {\n            return <Redirect to=\"/main\" />\n        }\n        const MainRegForm = Form.create()(RegForm)\n        return(\n            <div className=\"wrapper\">\n                <h1>The Registration Page</h1>\n                <MainRegForm />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(RegPage)","import React, { Component } from 'react'\nimport { Button, Icon } from 'antd'\nimport './GameArea.css'\nimport { connect } from 'react-redux'\nimport { getMovieData, updateScore } from '../../../store/actions/game'\nimport io from 'socket.io-client'\nlet socket = null\nclass GameArea extends Component{\n    constructor(props){\n        super(props)\n        socket = io.connect('http://localhost:8000')\n    }\n    state = {\n        answered: false\n    }\n    componentWillMount = () => {\n        this.props.getMovieData(socket)\n    }\n    componentWillUnmount() {\n        socket.disconnect()\n    }\n    checkTheAnswer = (e) => {\n        this.setState({\n            answered: true\n        })\n        \n        let answer = this.props.gameData.movies.find((item) => item.answer === true)\n        let btnAnswer = e.target.style\n        if(answer.title === e.target.name){        \n            btnAnswer.background = \"#179317\"\n            btnAnswer.borderColor = \"green\"\n            this.props.updateScore(this.props.userId, socket)\n        }\n        else{\n            btnAnswer.background = \"#ef2f2f\"\n            btnAnswer.borderColor = \"red\"\n            let correctButton = document.getElementsByClassName(answer.mdb_id.toString())\n            correctButton[0].style.background = \"#179317\"\n            correctButton[0].style.borderColor = \"green\"\n        }\n    }\n    nextQuestion = (e) => {\n        this.setState({\n            answered: false\n        })\n        this.props.getMovieData(socket)\n    }\n    \n    render(){\n        const { isLoading, isLoaded, gameData } = this.props\n        if (isLoading) return <div><Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /></div>\n        if (!isLoaded || !gameData) return null\n        \n        return(\n            <article className=\"game-area\">\n                <h1>Choose the correct movie title</h1>\n                <div className=\"game-img\" style={{background : `url(\"${gameData.imageURL}\") no-repeat`}} /> \n                <div className=\"button-answers\">\n                    {gameData.movies.map((item)=> \n                        <Button \n                            type=\"primary\" \n                            disabled={this.state.answered} \n                            key={item.mdb_id}\n                            className={item.mdb_id.toString()}\n                            name={item.title} \n                            onClick={this.checkTheAnswer}> \n                            {item.title}\n                        </Button>\n                    )}\n                </div>\n                <Button style={{display: this.state.answered ? \"block\" : \"none\" }} onClick={this.nextQuestion} className=\"next-button\" >Next</Button>\n            </article>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      gameData: state.gameData.data,\n      isLoading: state.gameData.isLoading,\n      isLoaded: state.gameData.isLoaded,\n      userId: state.userStatus.userData.userId,\n      username: state.userStatus.userData.username\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getMovieData: (socket) => dispatch(getMovieData(socket)),\n      updateScore: (userId, socket) => dispatch(updateScore(userId, socket))\n      \n\n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(GameArea)","const gameData = () => ({\n        type: 'GET_DATA'\n})\nconst gameDataSuccsess = (payload) => ({\n        type: 'GET_DATA_SUCCESS',\n        payload\n})\nconst scoreUpdated = (payload) => ({\n        type: 'SCORE_UPDATED',\n        payload\n})\nexport const updateScore = (userId, socket) => {\n    return (dispatch) => {\n        socket.emit('updateScore', userId, (data) => dispatch(scoreUpdated(data)))\n    }\n}\n\nexport const getMovieData = (socket) => {\n    return (dispatch) => {\n        dispatch(gameData())\n        socket.emit('getGame', (data) => dispatch(gameDataSuccsess(data)))\n    }\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport GameArea from './components/GameArea/GameArea';\n\nclass GamePage extends Component{ \n    render(){\n        const { isAuth } = this.props\n        if (!isAuth) {\n            return <Redirect to=\"/auth\" />\n        }\n        return(\n                <div className=\"wrapper\">\n                    <GameArea />\n                </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(GamePage)","import React, { Component } from 'react'\nimport { Button, Icon } from 'antd'\nimport './CoopGameArea.css'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom' \nimport { \n    getPlayersList, \n    invitePlayer, \n    gotInvite, \n    readyForGame, \n    exitGame, \n    gameData, \n    nextMovie, \n    updateScore, \n    gotaWinner,\n    globalScoreUpdate,\n    removeOpponent,\n    canceledGame } from '../../../store/actions/multiplayerGame'\nimport io from 'socket.io-client'\nlet socket = null\n\nclass CoopGameArea extends Component{\n    constructor(props){\n        super(props)\n        socket = io.connect('http://localhost:8000')\n        socket.emit('multiConnect', {username: this.props.username, userId: this.props.userId})\n\n        socket.on('gamers', (data) => this.props.getPlayersList(data))\n\n        socket.on('gotInvite', (data) => this.props.gotInvite(data))\n\n        socket.on('getGameTask', (data) => this.props.movieData(data))\n\n        socket.on('gotaWinner', (data) => this.props.gotaWinner(data))\n\n        socket.on('updateUserScore', (data) => this.props.globalScoreUpdate(data))\n\n        socket.on('opponentCanceled', () => this.props.canceledGame())\n    }\n    state = {\n        answered: false\n    }\n    componentWillUnmount() {\n        socket.disconnect()\n        this.props.exitGame()\n    }\n    checkTheAnswer = (e) => {\n        this.setState({\n            answered: true\n        })\n        let answer = this.props.gameData.movies.find((item) => item.answer === true)\n        let btnAnswer = e.target.style\n        if(answer.title === e.target.name){        \n            btnAnswer.background = \"#179317\"\n            btnAnswer.borderColor = \"green\"\n            btnAnswer.color = \"white\"            \n            this.props.updateScore(this.props.playerScore + 10)\n        }\n        else{\n            btnAnswer.background = \"#ef2f2f\"\n            btnAnswer.borderColor = \"red\"\n            btnAnswer.color = \"white\"\n            let correctButton = document.getElementsByClassName(answer.mdb_id.toString())[0]\n            correctButton.style.background = \"#179317\"\n            correctButton.style.borderColor = \"green\"\n            correctButton.style.color = \"white\"\n            this.props.updateScore(this.props.playerScore - 5)\n        }\n    }\n    nextQuestion = (e) => {\n        this.setState({\n            answered: false\n        })\n        this.props.nextMovie(socket, this.props.playerScore)\n    }\n    gamerWinner = () => (\n        <>\n            <h1>Congratulations!</h1> <p>You are a winner! You got a 200 points.</p>\n        </>\n    )\n    opponentWinner = (props) => (\n        <>\n            <h1>{props.opponent} is a winner</h1> <p>Better luck next time =(</p>\n        </>\n    )\n    drawResult = () => (\n        <>\n            <h1>Its draw</h1><p>Both got a 100 points.</p>\n        </>\n    )\n\n    render(){\n        const { gamers, opponent, playerReady, gameData, dataIsLoading, waitingForOpponent, username, playerScore, winner } = this.props\n        \n        if(!gamers) return <div><Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /></div>\n        \n        if(playerReady && opponent && !gameData) return <div><Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /></div>\n        \n        if(winner) return (\n            <article className=\"game-area\">\n                {winner.draw ? <this.drawResult /> : \n                    winner.username === username ? <this.gamerWinner /> : \n                        <this.opponentWinner opponent = {opponent.username}/>\n                }\n                <Button type=\"primary\" onClick={() => this.props.history.push('/main')}>Main menu</Button>\n            </article>\n        )\n        \n        if(playerReady && opponent && gameData) return (\n                <article className=\"game-area\">\n                    <div className=\"game-info\">\n                        <div><p>Your score:</p><p style={{fontSize: \"20px\"}}>{playerScore}</p></div>\n                        <div><p>Game</p> <p style={{fontSize: \"20px\"}}>{gameData.gameNumber} of 10</p></div>\n                        <div><p>{opponent.username}</p><p style={{fontSize: \"20px\"}}>{opponent.score}</p></div>\n                    </div>\n                    {dataIsLoading ? <Icon type=\"loading\" style={{fontSize: \"50px\", color: \"#00305e\"}} /> : \n                        <>\n                            <div className=\"game-img\" style={{background : `url(\"${gameData.imageURL}\") 50% 50% no-repeat`}} /> \n                            <div className=\"button-answers\">\n                                {gameData.movies.map((item)=> \n                                    <Button \n                                        type=\"primary\" \n                                        disabled={this.state.answered || waitingForOpponent} \n                                        key={item.mdb_id}\n                                        className={item.mdb_id.toString()}\n                                        name={item.title} \n                                        onClick={this.checkTheAnswer}> \n                                        {item.title}\n                                    </Button>\n                                )}\n                            </div>\n                        </>\n                    }\n                    <Button \n                        type=\"primary\" \n                        style={{cursor: \"pointer\", display: this.state.answered || waitingForOpponent ? \"block\" : \"none\" }}\n                        disabled={waitingForOpponent} \n                        onClick={this.nextQuestion} \n                        className=\"next-button\" >\n                            {waitingForOpponent ? \"Waiting for opponent answer...\" : \"Next\"}\n                    </Button>\n                </article>\n            )\n        \n        return(\n            <article className=\"gamers-list\">\n                <h2>Choose your opponent</h2>\n                {opponent? \n                    <div style={{margin: \"5px\"}} >\n                        <Button \n                            type=\"primary\" \n                            onClick={() => this.props.readyForGame(socket)}>\n                                Accept {opponent.username}\n                        </Button>\n                        <Button \n                            type=\"primary\" \n                            style={{float: \"right\"}} \n                            onClick={() => this.props.removeOpponent(socket)}>\n                                Dismiss\n                        </Button>\n                    </div> : null\n                }\n                {waitingForOpponent? \n                    <div>\n                        <span>Waiting for opponent...</span>\n                        <Button \n                            type=\"primary\" \n                            size={\"small\"} \n                            style={{float: \"right\"}} \n                            onClick={() => this.props.removeOpponent(socket)}>\n                                Cancel\n                        </Button>\n                    </div> : null\n                }\n                {gamers.length === 1? <p style={{fontSize: \"16px\"}}>There are no players online </p> : \n                    gamers.map(item => \n                        <div key={item.userId} style={{display: item.nick === username? \"none\" : \"block\" }}>{item.nick} \n                            <Button \n                                type=\"primary\" \n                                disabled={item.ready || waitingForOpponent || opponent || item.waiting} \n                                style={{float: \"right\", visibility: item.nick === username ? \"hidden\": \"visible\", cursor: \"pointer\"}} \n                                size={\"small\"} \n                                onClick={() => this.props.invitePlayer(socket, item.id)}>\n                                    Invite\n                            </Button>\n                        </div>\n                    )\n                }\n            </article>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      gamers: state.multiplayerGameStatus.gamers,\n      opponent: state.multiplayerGameStatus.opponent,\n      userId: state.userStatus.userData.userId,\n      username: state.userStatus.userData.username,\n      playerReady: state.multiplayerGameStatus.playerReady,\n      dataIsLoading: state.multiplayerGameStatus.dataIsLoading,\n      gameData: state.multiplayerGameStatus.data,\n      waitingForOpponent: state.multiplayerGameStatus.waitingForOpponent,\n      playerScore: state.multiplayerGameStatus.gameScore,\n      winner: state.multiplayerGameStatus.winner\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getPlayersList: (data) => dispatch(getPlayersList(data)),\n      invitePlayer: (socket, opponent) => dispatch(invitePlayer(socket, opponent)),\n      gotInvite: (data) => dispatch(gotInvite(data)),\n      readyForGame: (socket) => dispatch(readyForGame(socket)),\n      exitGame: () => dispatch(exitGame()),\n      movieData: (data) => dispatch(gameData(data)),\n      nextMovie: (socket, data) => dispatch(nextMovie(socket, data)),\n      updateScore: ( data) => dispatch(updateScore( data)),\n      gotaWinner: (data) => dispatch(gotaWinner(data)),\n      globalScoreUpdate: (data) => dispatch(globalScoreUpdate(data)),\n      removeOpponent: (socket) => dispatch(removeOpponent(socket)),\n      canceledGame: () => dispatch(canceledGame())\n        \n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(withRouter(CoopGameArea))\n","const waitForOpponent = () => ({type: 'WAITING_FOR_OPPONENT'})\n\nconst gotOpponent = (payload) => ({type: 'GOT_OPPONENT', payload})\n\nconst getData = () => ({type: 'GET_DATA'})\n\nconst opponentCanceled = () => ({type: 'GAME_CANCELED'})\n\nconst playerReady = () => ({type: 'PLAYER_READY'})\n\nconst clearOpponent = () => ({type: 'REMOVE_OPPONENT'})\n\nconst updOpponentsScore = (payload) => ({type: 'OPPONENST_SCORE_UPDATE', payload})\n\nconst winner = (payload) => ({type: 'GOT_A_WINNER', payload})\n\nconst getDataSuccess = (payload) => ({type: 'DATA_SUCCESS',payload})\n\nconst sessionScoreUpdate = (payload) => ({type: 'UPDATE_SCORE', payload})\n\nconst scoreUpdate = (payload) => ({type: 'SCORE_UPDATED', payload})\n\nconst endGame = () => ({type: 'EXIT_GAME'})\n\nconst playersList = (payload) => ({type: 'GET_PLAYERS_LIST', payload})\n\nexport const getPlayersList = (data) => {\n    return (dispatch) => {\n        dispatch(playersList(data))\n    }\n}\nexport const invitePlayer = (socket, opponent) => {\n    return (dispatch) => {\n        dispatch(waitForOpponent())\n        socket.emit('invite', opponent, (data) => {\n        })\n        socket.emit('readyForGame')\n        dispatch(playerReady())\n\n    }\n}\nexport const gotInvite = (data) => {\n    return (dispatch) => {\n        dispatch(gotOpponent(data))\n    }\n}\nexport const readyForGame =(socket) => {\n    return (dispatch) => {\n        dispatch(playerReady())\n        socket.emit('readyForGame')\n    }\n}\nexport const nextMovie = (socket, data)=> {\n    return (dispatch) => {\n        dispatch(waitForOpponent())\n        socket.emit('nextMovie', (data))\n    }\n}\nexport const updateScore = (data) => {\n    return (dispatch) => {\n        dispatch(sessionScoreUpdate(data))\n    }\n}\nexport const removeOpponent = (socket) => {\n    return (dispatch) => {\n        dispatch(clearOpponent())\n        dispatch(opponentCanceled())\n        socket.emit('cancelGame')\n    }\n}\nexport const canceledGame = () => {\n    return (dispatch) => {\n        dispatch(opponentCanceled())\n    }\n}\nexport const exitGame =() => {\n    return (dispatch) => {\n        dispatch(endGame())\n    }\n}\nexport const gameData =({data, score}) => {\n    return (dispatch) => {\n        if(score) dispatch(updOpponentsScore(score))\n        dispatch(getData())\n        dispatch(getDataSuccess(data))\n    }\n}\nexport const gotaWinner = (data) => {\n    return(dispatch) => {\n        dispatch(winner(data))\n    }\n}\nexport const globalScoreUpdate = (data) => {\n    return (dispatch) => {\n        dispatch(scoreUpdate(data))\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CoopGameArea from './components/CoopGameArea/CoopGameArea';\n\nclass MultiGamePage extends Component{ \n    render(){\n        const { isAuth } = this.props\n        if (!isAuth) {\n            return <Redirect to=\"/auth\" />\n        }\n        return(\n                <div className=\"wrapper\">\n                    <CoopGameArea />\n                </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.userStatus.isAuth\n    }\n  }\n \nexport default connect(mapStateToProps)(MultiGamePage)","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\n\nimport MainPage from './pages/Main';\nimport AuthPage from './pages/Auth';\nimport NavBar from './pages/components/NavBar/NavBar';\nimport RegPage from './pages/Register';\nimport GamePage from './pages/Game';\nimport MultiplayerGame from './pages/MultiplayerGame';\n\nconst store = configureStore()\nstore.subscribe(() => {\n  store.getState();\n});\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <NavBar />\n        <Switch>\n          <Redirect from=\"/\" to=\"/main\" exact/>\n          <Route path=\"/main\" component={MainPage} />\n          <Route path=\"/auth\" component={AuthPage} />\n          <Route path=\"/signup\" component={RegPage} />\n          <Route path=\"/single-game\" component={GamePage} />\n          <Route path=\"/multiplayer-game\" component={MultiplayerGame} />\n        </Switch>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}